{
  "name": "realm1000-dito-backend",
  "version": "1.13.0-alpha",
  "description": "REALM1000 Telco Project NestJS Backend",
  "author": {
    "email": "rakiabodyjm@gmail.com",
    "name": "Janeo Miguel Tiongson",
    "url": "https://github.com/rakiabodyjm"
  },
  "contributors": [
    {
      "name": "Jerome C. Gapasin",
      "email": "gapasinjerome99@gmail.com",
      "url": "https://github.com/bluerose29"
    },
    {
      "name": "Reynard Visperas",
      "email": "visperas30@gmail.com",
      "url": "https://github.com/RCVisperas"
    }
  ],
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "cross-env NODE_ENV=development nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/src/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:e2e:watch": "jest --watch --detectOpenHandles --config ./test/jest-e2e.json",
    "dev": "nest start --watch",
    "typeorm": "node --require ts-node/register ./node_modules/typeorm/cli.js",
    "migration:generate": "npm run build && npm run typeorm migration:generate -- -n",
    "migration:run": "npm run build && npm run typeorm migration:run"
  },
  "dependencies": {
    "@apollo/gateway": "^0.36.0",
    "@nestjs/axios": "^0.0.3",
    "@nestjs/common": "^8.0.6",
    "@nestjs/config": "^1.0.1",
    "@nestjs/core": "^8.0.6",
    "@nestjs/event-emitter": "^1.1.1",
    "@nestjs/graphql": "^8.0.2",
    "@nestjs/jwt": "^8.0.0",
    "@nestjs/mapped-types": "^1.0.0",
    "@nestjs/passport": "^8.0.1",
    "@nestjs/platform-express": "^8.0.6",
    "@nestjs/swagger": "^5.0.9",
    "@nestjs/typeorm": "^8.0.2",
    "apollo-server-express": "^3.1.2",
    "bcrypt": "^5.0.1",
    "cache-manager": "^3.4.4",
    "chalk": "^4.1.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.1",
    "cli-boxes": "^3.0.0",
    "cookie-parser": "^1.4.6",
    "csvtojson": "^2.0.10",
    "dotenv": "^10.0.0",
    "global": "^4.4.0",
    "graphql": "^15.5.1",
    "mssql": "^7.2.0",
    "mysql": "^2.18.1",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.3.0",
    "swagger-ui-express": "^4.1.6",
    "ts-morph": "^11.0.3",
    "typeorm": "^0.2.36",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@babel/preset-typescript": "^7.16.0",
    "@nestjs/schematics": "^8.0.8",
    "@nestjs/testing": "^8.2.0",
    "@types/axios": "^0.14.0",
    "@types/bcrypt": "^5.0.0",
    "@types/cache-manager": "^3.4.2",
    "@types/cookie-parser": "^1.4.2",
    "@types/express": "^4.17.11",
    "@types/jest": "^26.0.22",
    "@types/node": "^14.14.36",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/supertest": "^2.0.10",
    "@types/uuid": "^8.3.1",
    "@typescript-eslint/eslint-plugin": "^4.19.0",
    "@typescript-eslint/parser": "^4.19.0",
    "eslint": "^7.22.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-prettier": "^3.3.1",
    "jest": "^26.6.3",
    "prettier": "^2.2.1",
    "supertest": "^6.1.3",
    "ts-jest": "^26.5.4",
    "ts-loader": "^8.0.18",
    "ts-node": "^9.1.1",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^4.2.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "./",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "modulePaths": [
      "<rootDir>"
    ],
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/src/$1",
      "root/(.*)$": "<rootDir>/$1"
    }
  }
}
